<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.baosight.xdata.store.datalake</groupId>
    <artifactId>xdata-store-datalake</artifactId>
    <version>1.0.0.0.0</version>
    <modules>
        <module>datalake-common</module>
        <module>datalake-core</module>
        <module>datalake-sdk</module>
    </modules>


    <packaging>pom</packaging>
    <profiles>
        <profile>
            <id>cdh5_16</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cdh.hive.version>1.1.0-cdh5.16.2</cdh.hive.version>
                <cdh.zookeeper.version>3.4.5-cdh5.16.2</cdh.zookeeper.version>
                <cdh.avro.mared.version>1.7.6-cdh5.16.2</cdh.avro.mared.version>
                <cdh.hadoop.version>2.6.0-cdh5.16.2</cdh.hadoop.version>
            </properties>
        </profile>
        <profile>
            <id>cdh5_14</id>
            <properties>
                <cdh.hive.version>1.1.0-cdh5.14.0</cdh.hive.version>
                <cdh.zookeeper.version>3.4.5-cdh5.14.0</cdh.zookeeper.version>
                <cdh.avro.mared.version>1.7.6-cdh5.14.0</cdh.avro.mared.version>
                <cdh.hadoop.version>2.6.0-cdh5.14.0</cdh.hadoop.version>
            </properties>
        </profile>
        <profile>
            <id>cdh5_11</id>
            <properties>
                <cdh.hive.version>1.1.0-cdh5.11.0</cdh.hive.version>
                <cdh.zookeeper.version>3.4.5-cdh5.11.0</cdh.zookeeper.version>
                <cdh.avro.mared.version>1.7.6-cdh5.11.0</cdh.avro.mared.version>
                <cdh.hadoop.version>2.6.0-cdh5.11.0</cdh.hadoop.version>
            </properties>
        </profile>
    </profiles>

    <properties>
        <flink.version>1.13.2</flink.version>
        <scala.binary.version>2.11</scala.binary.version>
        <hudi.version>0.10.1</hudi.version>
        <codehaus.jackson.version>1.9.11</codehaus.jackson.version>
        <druid.version>1.1.21</druid.version>
        <httpclient.version>4.3.3</httpclient.version>
        <hutool.version>5.7.14</hutool.version>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <kafka.version>0.11.0-kafka-3.0.0</kafka.version>
        <log4j.version>1.2.17</log4j.version>
        <log4j2.version>1.7.30</log4j2.version>
        <logging.log4j.version>2.17.0</logging.log4j.version>
        <lombok.version>1.18.12</lombok.version>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <parquet-hadoop.version>1.10.1</parquet-hadoop.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.2.5.RELEASE</spring-boot.version>
        <!--        <hive-jdbc.version>1.1.0</hive-jdbc.version>-->
        <stspro.version>1.0.0.2.0</stspro.version>
        <datalake.version>1.0.0.0.0</datalake.version>

    </properties>
    <repositories>
        <repository>
            <id>all</id>
            <name>all</name>
            <url>http://nexus.baocloud.cn/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencyManagement>
        <dependencies>

            <!-- Hoodie -->
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-common</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-client-common</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-flink-client</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-flink_${scala.binary.version}</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-hadoop-mr</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-hive-sync</artifactId>
                <version>${hudi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-sync-common</artifactId>
                <version>${hudi.version}</version>
            </dependency>

            <!-- Flink -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.esotericsoftware.kryo</groupId>
                        <artifactId>kryo</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.esotericsoftware.minlog</groupId>
                        <artifactId>minlog</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-hadoop-compatibility_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-parquet_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-runtime-blink_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-jdbc</artifactId>
                <version>${cdh.hive.version}</version>
            </dependency>
            <dependency>
                <artifactId>slf4j-log4j12</artifactId>
                <groupId>org.slf4j</groupId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <classifier>recipes-lock</classifier>
                <version>${cdh.zookeeper.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mrbean</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-smile</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-jaxrs</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-core-asl</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-xc</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-core-lgpl</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-lgpl</artifactId>
                <version>${codehaus.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${logging.log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${logging.log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${logging.log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${logging.log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>